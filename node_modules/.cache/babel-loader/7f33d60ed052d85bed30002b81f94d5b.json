{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05EA\\u05E8\\u05D0\\\\Desktop\\\\LeaderFinalProject-master\\\\react\\\\src\\\\components\\\\Task.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../Redux/Store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction mapStateToProps(state) {\n  return {\n    task: state.taskReducer.task,\n    userId: state.userReducer.user.id\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setUserId: userId => dispatch(actions.setUserId(userId)),\n  setTitle: title => dispatch(actions.setTitle(title)),\n  setCompleted: completed => dispatch(actions.setCompleted(completed))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(function Task(props) {\n  const {\n    task,\n    setTitle,\n    setCompleted,\n    textButton,\n    func\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        width: '18rem',\n        display: \"inline-block\",\n        margin: '2vw'\n      },\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"right\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        \"data-toggle\": \"modal\",\n        \"data-target\": \".bd-example-modal-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskinput\",\n          className: \"form-label\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"title: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 75\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"card-text\",\n          id: \"taskinput\",\n          value: task.title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"completedinput\",\n          className: \"form-label\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"completed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 80\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"card-text\",\n          id: \"completedinput\",\n          checked: task.completed,\n          onChange: e => setCompleted(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        style: {\n          margin: '1vh'\n        },\n        className: \"btn btn-info\",\n        disabled: task.title === '',\n        onClick: e => func(task),\n        \"data-dismiss\": \"modal\",\n        children: textButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n});","map":{"version":3,"sources":["C:/Users/אתרא/Desktop/LeaderFinalProject-master/react/src/components/Task.js"],"names":["React","connect","actions","mapStateToProps","state","task","taskReducer","userId","userReducer","user","id","mapDispatchToProps","dispatch","setUserId","setTitle","title","setCompleted","completed","Task","props","textButton","func","width","display","margin","e","target","value","checked"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../Redux/Store/actions';\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        task: state.taskReducer.task,\r\n        userId: state.userReducer.user.id\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setUserId: (userId) => dispatch(actions.setUserId(userId)),\r\n    setTitle: (title) => dispatch(actions.setTitle(title)),\r\n    setCompleted: (completed) => dispatch(actions.setCompleted(completed)),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function Task(props) {\r\n    const { task, setTitle, setCompleted,textButton,func } = props;\r\n    \r\n    return (\r\n        <>\r\n                <div className=\"card\" style={{ width: '18rem', display: \"inline-block\", margin: '2vw' }} data-toggle=\"tooltip\" data-placement=\"right\">\r\n                    <div className=\"card-body\" data-toggle=\"modal\" data-target=\".bd-example-modal-sm\">\r\n                        <label htmlFor=\"taskinput\" className=\"form-label\"><b>title: </b></label>\r\n                        <input className=\"card-text\" id=\"taskinput\" value={task.title}\r\n                            onChange={(e) => setTitle(e.target.value)}></input>\r\n                        <label htmlFor=\"completedinput\" className=\"form-label\"><b>completed:</b></label>\r\n                        <input type=\"checkbox\" className=\"card-text\" id=\"completedinput\" checked={task.completed}\r\n                            onChange={(e) => setCompleted(e.target.checked)}></input>\r\n                    </div>\r\n                    <button type=\"button\" style={{ margin: '1vh' }} className=\"btn btn-info\"\r\n                        disabled={task.title === ''} onClick={(e) => func(task)} data-dismiss=\"modal\">{textButton}</button>\r\n                </div>\r\n        </>\r\n    )\r\n})"]},"metadata":{},"sourceType":"module"}