{"ast":null,"code":"import produce from 'immer';\nimport createReducer from './ReducerUtil';\nconst initialState = {\n  user: {\n    id: '',\n    name: '',\n    password: '',\n    tasks: []\n  }\n};\nconst users = {\n  setId(state, action) {\n    state.user.id = action.payload;\n  },\n\n  setName(state, action) {\n    state.user.name = action.payload;\n  },\n\n  setPassword(state, action) {\n    state.user.password = action.payload;\n  },\n\n  setTasks(state, action) {\n    state.user.tasks = action.payload;\n  },\n\n  addTask(state, action) {\n    state.user.tasks.push(action.payload);\n  },\n\n  deleteTask(state, action) {\n    let tasksArr = [];\n\n    for (let i = 0; i < state.user.tasks.length; i++) {\n      if (state.user.tasks[i]._id != action.payload) tasksArr.push(state.user.tasks[i]);\n    }\n\n    state.user.tasks = tasksArr;\n  },\n\n  setTaskInArr(state, action) {\n    let tasksArr = state.user.tasks;\n\n    for (let i = 0; i < tasksArr.length; i++) {\n      if (tasksArr[i]._id === action.payload._id) {\n        state.user.tasks[i] = action.payload;\n        break;\n      }\n    }\n  }\n\n};\nexport default _c2 = produce(_c = (state, action) => createReducer(state, action, users), initialState);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$produce\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/אתרא/Desktop/LeaderFinalProject-master/react/src/Redux/Store/Reducers/User.js"],"names":["produce","createReducer","initialState","user","id","name","password","tasks","users","setId","state","action","payload","setName","setPassword","setTasks","addTask","push","deleteTask","tasksArr","i","length","_id","setTaskInArr"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAOC,aAAP,MAA0B,eAA1B;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,EAAE,EAAE,EADF;AAEFC,IAAAA,IAAI,EAAE,EAFJ;AAGFC,IAAAA,QAAQ,EAAE,EAHR;AAIFC,IAAAA,KAAK,EAAE;AAJL;AADW,CAArB;AAUA,MAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACjBD,IAAAA,KAAK,CAACP,IAAN,CAAWC,EAAX,GAAgBO,MAAM,CAACC,OAAvB;AACH,GAHS;;AAIVC,EAAAA,OAAO,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACnBD,IAAAA,KAAK,CAACP,IAAN,CAAWE,IAAX,GAAkBM,MAAM,CAACC,OAAzB;AACH,GANS;;AAOVE,EAAAA,WAAW,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACvBD,IAAAA,KAAK,CAACP,IAAN,CAAWG,QAAX,GAAsBK,MAAM,CAACC,OAA7B;AACH,GATS;;AAUVG,EAAAA,QAAQ,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACpBD,IAAAA,KAAK,CAACP,IAAN,CAAWI,KAAX,GAAmBI,MAAM,CAACC,OAA1B;AACH,GAZS;;AAaVI,EAAAA,OAAO,CAACN,KAAD,EAAQC,MAAR,EAAgB;AACnBD,IAAAA,KAAK,CAACP,IAAN,CAAWI,KAAX,CAAiBU,IAAjB,CAAsBN,MAAM,CAACC,OAA7B;AACH,GAfS;;AAgBVM,EAAAA,UAAU,CAACR,KAAD,EAAQC,MAAR,EAAgB;AACtB,QAAIQ,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACP,IAAN,CAAWI,KAAX,CAAiBc,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C,UAAIV,KAAK,CAACP,IAAN,CAAWI,KAAX,CAAiBa,CAAjB,EAAoBE,GAApB,IAA0BX,MAAM,CAACC,OAArC,EACIO,QAAQ,CAACF,IAAT,CAAcP,KAAK,CAACP,IAAN,CAAWI,KAAX,CAAiBa,CAAjB,CAAd;AACP;;AACDV,IAAAA,KAAK,CAACP,IAAN,CAAWI,KAAX,GAAmBY,QAAnB;AACH,GAvBS;;AAwBVI,EAAAA,YAAY,CAACb,KAAD,EAAQC,MAAR,EAAgB;AACxB,QAAIQ,QAAQ,GAAGT,KAAK,CAACP,IAAN,CAAWI,KAA1B;;AACA,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,UAAID,QAAQ,CAACC,CAAD,CAAR,CAAYE,GAAZ,KAAoBX,MAAM,CAACC,OAAP,CAAeU,GAAvC,EAA4C;AACxCZ,QAAAA,KAAK,CAACP,IAAN,CAAWI,KAAX,CAAiBa,CAAjB,IAAsBT,MAAM,CAACC,OAA7B;AACA;AACH;AACJ;AACJ;;AAhCS,CAAd;AAkCA,qBAAeZ,OAAO,MAAC,CAACU,KAAD,EAAQC,MAAR,KAAmBV,aAAa,CAACS,KAAD,EAAQC,MAAR,EAAgBH,KAAhB,CAAjC,EAAyDN,YAAzD,CAAtB","sourcesContent":["import produce from 'immer';\r\nimport createReducer from './ReducerUtil';\r\nconst initialState = {\r\n    user: {\r\n        id: '',\r\n        name: '',\r\n        password: '',\r\n        tasks: [\r\n\r\n        ]\r\n    }\r\n}\r\nconst users = {\r\n    setId(state, action) {\r\n        state.user.id = action.payload;\r\n    },\r\n    setName(state, action) {\r\n        state.user.name = action.payload;\r\n    },\r\n    setPassword(state, action) {\r\n        state.user.password = action.payload;\r\n    },\r\n    setTasks(state, action) {\r\n        state.user.tasks = action.payload;\r\n    },\r\n    addTask(state, action) {\r\n        state.user.tasks.push(action.payload);\r\n    },\r\n    deleteTask(state, action) {\r\n        let tasksArr = [];\r\n        for (let i = 0; i < state.user.tasks.length; i++) {\r\n            if (state.user.tasks[i]._id!= action.payload)\r\n                tasksArr.push(state.user.tasks[i]);\r\n        }\r\n        state.user.tasks = tasksArr;\r\n    },\r\n    setTaskInArr(state, action) {\r\n        let tasksArr = state.user.tasks;\r\n        for (let i = 0; i < tasksArr.length; i++) {\r\n            if (tasksArr[i]._id === action.payload._id) {\r\n                state.user.tasks[i] = action.payload;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default produce((state, action) => createReducer(state, action, users), initialState);"]},"metadata":{},"sourceType":"module"}