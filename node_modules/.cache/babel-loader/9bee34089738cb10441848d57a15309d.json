{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05EA\\u05E8\\u05D0\\\\Desktop\\\\LeaderFinalProject-master\\\\react\\\\src\\\\components\\\\TableDynamic.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { actions } from '../Redux/Store/actions';\nimport { compose } from \"redux\";\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst mapDispatchToProps = dispatch => ({\n  setDataTable: data => dispatch(actions.setDataTable(data))\n});\n\nfunction mapStateToProps(state) {\n  return {\n    dataTable: state.userReducer.dataTable\n  };\n}\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(function TableDynamic(props) {\n  const {\n    dataTable,\n    setDataTable\n  } = props;\n  let arrField = [],\n      i = 0,\n      arrData = [];\n\n  function getAllData() {\n    fetch(\"http://localhost:3001/getAllData\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setDataTable(data);\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-outline-primary\",\n      onClick: getAllData,\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), dataTable.forEach(element => {\n      if (i < 1) Object.keys(element).forEach(key => arrField.push({\n        name: key,\n        value: element[key]\n      }));\n      i++;\n      Object.keys(element).forEach(key => arrData.push({\n        name: key,\n        value: element[key]\n      }));\n    }), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-primary\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: arrField.map((x, k) => /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: x.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: arrData.map((x, k) => k < arrField.length ? /*#__PURE__*/_jsxDEV(\"td\", {\n            scope: \"col\",\n            children: x.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 47\n          }, this) : \"\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n});","map":{"version":3,"sources":["C:/Users/אתרא/Desktop/LeaderFinalProject-master/react/src/components/TableDynamic.js"],"names":["React","connect","actions","compose","withRouter","mapDispatchToProps","dispatch","setDataTable","data","mapStateToProps","state","dataTable","userReducer","TableDynamic","props","arrField","i","arrData","getAllData","fetch","method","headers","then","res","json","console","log","catch","err","forEach","element","Object","keys","key","push","name","value","map","x","k","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../Redux/Store/actions';\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setDataTable: (data) => dispatch(actions.setDataTable(data)),\r\n})\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        dataTable: state.userReducer.dataTable\r\n    }\r\n}\r\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(function TableDynamic(props) {\r\n    const { dataTable, setDataTable } = props;\r\n    let arrField = [], i = 0,arrData=[]\r\n    function getAllData() {\r\n        fetch(\"http://localhost:3001/getAllData\", {\r\n            method: \"get\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n        })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                console.log(data)\r\n                setDataTable(data);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    return (\r\n\r\n        <>\r\n            <br />\r\n            <button type=\"button\" class=\"btn btn-outline-primary\" onClick={getAllData}>Click me</button>\r\n            <br /><br />\r\n            {dataTable.forEach(element => {\r\n                if (i < 1)\r\n                    Object.keys(element).forEach(key => arrField.push({ name: key, value: element[key] }))\r\n                i++;\r\n                Object.keys(element).forEach(key => arrData.push({ name: key, value: element[key] }))\r\n            })\r\n            }\r\n            <table className=\"table\">\r\n                <thead className=\"thead-primary\">\r\n                    <tr>\r\n                        {arrField.map((x, k) => (\r\n                            <th scope=\"col\">{x.name}</th>))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                     { arrData.map((x, k) => (\r\n                            k<arrField.length?<td scope=\"col\">{x.value}</td>:\"\"))}\r\n                  \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n})"]},"metadata":{},"sourceType":"module"}