{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05EA\\u05E8\\u05D0\\\\Desktop\\\\LeaderFinalProject-master\\\\react\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport Form from './Form';\nimport { connect } from 'react-redux';\nimport { actions } from '../Redux/Store/actions';\nimport { compose } from \"redux\";\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userReducer.user\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setId: id => dispatch(actions.setId(id)),\n  setTasks: tasks => dispatch(actions.setTasks(tasks))\n});\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(function Login(props) {\n  const {\n    user,\n    setId,\n    setTasks,\n    history\n  } = props;\n\n  const submitFunction = async e => {\n    e.preventDefault();\n    let data = {\n      name: user.name,\n      password: user.password\n    };\n    fetch(\"http://localhost:3001/getUser\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => {\n      if (res.status === 404) alert(\"User not found :(\");else return res.json();\n    }).then(user => {\n      setId(user.user._id);\n      setTasks(user.user.tasks);\n      localStorage.setItem('user', 'Bearer ' + user.token);\n      history.push('/tasks');\n    }).catch(err => {\n      console.log(\"error: \", err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    textButton: \"login\",\n    submitFunction: submitFunction\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n});","map":{"version":3,"sources":["C:/Users/אתרא/Desktop/LeaderFinalProject-master/react/src/components/Login.js"],"names":["React","Form","connect","actions","compose","withRouter","mapStateToProps","state","user","userReducer","mapDispatchToProps","dispatch","setId","id","setTasks","tasks","Login","props","history","submitFunction","e","preventDefault","data","name","password","fetch","method","headers","body","JSON","stringify","then","res","status","alert","json","_id","localStorage","setItem","token","push","catch","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACE,WAAN,CAAkBD;AADrB,GAAP;AAGH;;AACD,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACtCC,EAAAA,KAAK,EAAGC,EAAD,IAAQF,QAAQ,CAACR,OAAO,CAACS,KAAR,CAAcC,EAAd,CAAD,CADe;AAEtCC,EAAAA,QAAQ,EAAGC,KAAD,IAAWJ,QAAQ,CAACR,OAAO,CAACW,QAAR,CAAiBC,KAAjB,CAAD;AAFS,CAAf,CAA3B;;AAIA,eAAeX,OAAO,CAACC,UAAD,EAAaH,OAAO,CAACI,eAAD,EAAkBI,kBAAlB,CAApB,CAAP,CAAkE,SAASM,KAAT,CAAeC,KAAf,EAAsB;AACnG,QAAM;AAAET,IAAAA,IAAF;AAAQI,IAAAA,KAAR;AAAeE,IAAAA,QAAf;AAAyBI,IAAAA;AAAzB,MAAqCD,KAA3C;;AACA,QAAME,cAAc,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,IAAI,GAAG;AAAEC,MAAAA,IAAI,EAAEf,IAAI,CAACe,IAAb;AAAmBC,MAAAA,QAAQ,EAAEhB,IAAI,CAACgB;AAAlC,KAAX;AACAC,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACnCC,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF0B;AAGnCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAH6B,KAAlC,CAAL,CAKKS,IALL,CAKUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EACIC,KAAK,CAAC,mBAAD,CAAL,CADJ,KAEK,OAAOF,GAAG,CAACG,IAAJ,EAAP;AACR,KATL,EAWKJ,IAXL,CAWWvB,IAAD,IAAU;AACZI,MAAAA,KAAK,CAACJ,IAAI,CAACA,IAAL,CAAU4B,GAAX,CAAL;AACAtB,MAAAA,QAAQ,CAACN,IAAI,CAACA,IAAL,CAAUO,KAAX,CAAR;AACAsB,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,YAAY9B,IAAI,CAAC+B,KAA9C;AACArB,MAAAA,OAAO,CAACsB,IAAR,CAAa,QAAb;AACH,KAhBL,EAiBKC,KAjBL,CAiBWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;AACH,KAnBL;AAqBH,GAxBD;;AAyBA,sBACI,QAAC,IAAD;AAAM,IAAA,UAAU,EAAC,OAAjB;AAAyB,IAAA,cAAc,EAAEvB;AAAzC;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CA9Bc,CAAf","sourcesContent":["import React from 'react';\r\nimport Form from './Form';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../Redux/Store/actions';\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setId: (id) => dispatch(actions.setId(id)),\r\n    setTasks: (tasks) => dispatch(actions.setTasks(tasks))\r\n})\r\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(function Login(props) {\r\n    const { user, setId, setTasks, history } = props;\r\n    const submitFunction = async (e) => {\r\n        e.preventDefault();\r\n        let data = { name: user.name, password: user.password };\r\n        fetch(\"http://localhost:3001/getUser\", {\r\n            method: \"post\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => {\r\n                if (res.status === 404)\r\n                    alert(\"User not found :(\")\r\n                else return res.json()\r\n            }\r\n            )\r\n            .then((user) => {\r\n                setId(user.user._id);\r\n                setTasks(user.user.tasks);\r\n                localStorage.setItem('user', 'Bearer ' + user.token);\r\n                history.push('/tasks');\r\n            })\r\n            .catch(err => {\r\n                console.log(\"error: \", err)\r\n            }\r\n            )\r\n    }\r\n    return (\r\n        <Form textButton=\"login\" submitFunction={submitFunction}></Form>\r\n    )\r\n})\r\n"]},"metadata":{},"sourceType":"module"}